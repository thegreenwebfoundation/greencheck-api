server {
    server_name {{ api_hostname }};
    access_log /var/log/nginx/{{ api_hostname }}-access.log;
    error_log /var/log/nginx/{{ api_hostname }}-error.log;
    root /var/www/{{ api_hostname }}/current/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application
        fastcgi_param APP_ENV {{ lookup('env', 'APP_ENV') }};
        fastcgi_param APP_SECRET {{ lookup('env', 'APP_SECRET') }};
        fastcgi_param DATABASE_URL {{ lookup('env', 'DATABASE_URL') }};

        fastcgi_param STATS_D_HOST {{ api_statsd_server_host }};
        fastcgi_param STATS_D_PORT {{ api_statsd_server_port }};
        fastcgi_param STATS_D_PROTOCOL udp;

        fastcgi_param SENTRY_DSN {{ lookup('env', 'SENTRY_DSN') }};
        fastcgi_param ENQUEUE_DSN {{ lookup('env', 'ENQUEUE_DSN') }};


        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{{ api_hostname }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ api_hostname }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = {{ api_hostname }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen {{ ansible_default_ipv4.address }}:80;
    server_name {{ api_hostname }} {{ api_hostname }};
    return 404; # managed by Certbot
}
